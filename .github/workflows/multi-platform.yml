name: Build Geode Mod

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build Type'
        required: true
        default: 'debug'
        type: choice
        options:
          - release
          - debug
  push:
    branches:
      - "**"


jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
        - name: Windows
          os: windows-latest

        - name: macOS
          os: macos-latest

        - name: Android32
          os: ubuntu-latest
          target: Android32

        - name: Android64
          os: ubuntu-latest
          target: Android64

    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set Release Build
        run: echo "RELEASE_BUILD=${{ github.event.inputs.build_type == 'release' }}" >> $GITHUB_ENV

      - name: Build the mod
        uses: geode-sdk/build-geode-mod@main
        with:
          bindings: geode-sdk/bindings
          bindings-ref: main
          combine: true
          build-config: ${{ github.event.inputs.build_type == 'release' && 'release' || 'relwithdebinfo' }}
          export-pdb: ${{ github.event.inputs.build_type == 'release' }}
          target: ${{ matrix.config.target }}

  package:
    name: Package builds
    runs-on: ubuntu-latest
    needs: ['build']

    steps:
      - uses: geode-sdk/build-geode-mod/combine@main
        id: build

      - uses: actions/upload-artifact@v4
        with:
          name: Build Output
          path: ${{ steps.build.outputs.build-output }}

  nightly:
    name: Publish Nightly Release
    runs-on: ubuntu-latest
    needs: package
    if: github.event.inputs.build_type != 'release' && github.ref == 'refs/heads/main' 
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: Build Output
          path: ./build-output

      - name: Extract contents
        run: unzip -q ./build-output.zip -d ./output

      - name: Upload Nightly Release
        uses: andelf/nightly-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly
          name: 'nightly'
          prerelease: true
          body: 'Development build of commit ${{ github.sha }}. Built in RelWithDebInfo.'
          files: |
            $(for file in $(find ./output -type f); do echo "$file"; done)